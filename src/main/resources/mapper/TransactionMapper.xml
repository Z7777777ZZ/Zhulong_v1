<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zsj.demo_v1.mapper.TransactionMapper">
    <resultMap id="BaseResultMap" type="org.zsj.demo_v1.entity.Transaction">
        <id column="id" property="id" />
        <result column="order_id" property="orderId" />
        <result column="user_id" property="userId" />
        <result column="package_id" property="packageId" />
        <result column="amount" property="amount" />
        <result column="quota" property="quota" />
        <result column="payment_method" property="paymentMethod" />
        <result column="status" property="status" />
        <result column="create_time" property="createTime" />
        <result column="pay_time" property="payTime" />
        <association property="rechargePackage" javaType="org.zsj.demo_v1.entity.RechargePackage">
            <id column="package_id" property="id" />
            <result column="package_name" property="name" />
            <result column="package_price" property="price" />
            <result column="package_quota" property="quota" />
            <result column="package_validity" property="validity" />
            <result column="package_popular" property="popular" />
            <result column="package_features" property="features" />
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        id, order_id, user_id, package_id, amount, quota, payment_method, status, create_time, pay_time
    </sql>
    
    <sql id="Join_Column_List">
        t.id, t.order_id, t.user_id, t.package_id, t.amount, t.quota, t.payment_method, t.status, t.create_time, t.pay_time,
        p.id as package_id, p.name as package_name, p.price as package_price, p.quota as package_quota, 
        p.validity as package_validity, p.popular as package_popular, p.features as package_features
    </sql>

    <select id="findByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT 
        <include refid="Join_Column_List" />
        FROM transaction t
        LEFT JOIN recharge_package p ON t.package_id = p.id
        WHERE t.user_id = #{userId}
        ORDER BY t.create_time DESC
    </select>
    
    <select id="findByUserIdAndTimeRange" resultMap="BaseResultMap">
        SELECT 
        <include refid="Join_Column_List" />
        FROM transaction t
        LEFT JOIN recharge_package p ON t.package_id = p.id
        WHERE t.user_id = #{userId}
        AND t.create_time BETWEEN #{startTime} AND #{endTime}
        ORDER BY t.create_time DESC
    </select>
    
    <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        SELECT 
        <include refid="Join_Column_List" />
        FROM transaction t
        LEFT JOIN recharge_package p ON t.package_id = p.id
        WHERE t.id = #{id}
    </select>
    
    <select id="findByOrderId" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT 
        <include refid="Join_Column_List" />
        FROM transaction t
        LEFT JOIN recharge_package p ON t.package_id = p.id
        WHERE t.order_id = #{orderId}
    </select>
    
    <insert id="insert" parameterType="org.zsj.demo_v1.entity.Transaction" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO transaction (
            order_id, user_id, package_id, amount, quota, payment_method, status, create_time, pay_time
        )
        VALUES (
            #{orderId}, #{userId}, #{packageId}, #{amount}, #{quota}, #{paymentMethod}, #{status}, #{createTime}, #{payTime}
        )
    </insert>
    
    <update id="update" parameterType="org.zsj.demo_v1.entity.Transaction">
        UPDATE transaction
        <set>
            <if test="status != null">status = #{status},</if>
            <if test="payTime != null">pay_time = #{payTime},</if>
            <if test="paymentMethod != null">payment_method = #{paymentMethod},</if>
        </set>
        WHERE id = #{id}
    </update>
    
    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM transaction
        WHERE id = #{id}
    </delete>
</mapper> 